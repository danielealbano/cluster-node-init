# Should really be converted in YAML or JSON :)

# general settings
# ---
# MODULE_LIST                       List of modules to execute in order
# MODULE_EXECUTION_MAX_RETRIES      Max number of retries in case of a module failure
# MODULE_EXECUTION_RETRY_WAIT       How much time to wait after a module failure
#
MODULE_LIST=""
MODULE_LIST="${MODULE_LIST} remove-cloud-init hostname-configure disks-configure timezone-configure keep-vt-logs-console"
MODULE_LIST="${MODULE_LIST} network-configure apt-configure apt-update apt-upgrade apt-install-packages"
MODULE_LIST="${MODULE_LIST} snap-install-packages ntp-configure apparmor-disable sshd-configure users-configure"
MODULE_LIST="${MODULE_LIST} print-info"
MODULE_EXECUTION_MAX_RETRIES=3
MODULE_EXECUTION_MAX_RETRY_WAIT_IN_SECONDS=5


# hostname-configure
# ---
# HOSTNAME                          Set the hostname of the machine to the value specified in the variable
# HOSTNAME_CMD                      Execute the command defined in the variable and use the output as hostname, if
#                                   this parameter is set takes precedence
# HOSTNAME_DOMAIN                   If set, set the domain name to the specified value
# HOSTNAME_DHCLIENT_RERUN
# HOSTNAME_DHCLIENT_DEV
#
HOSTNAME=""
HOSTNAME_CMD="echo 'rpi4-$(cat /proc/cpuinfo | grep Serial | awk "{ printf \$3 }" | cut -b 9-)'"
HOSTNAME_DOMAIN="worker.k8s-cluster.home"
HOSTNAME_DHCLIENT_RERUN=1
HOSTNAME_DHCLIENT_DEV="eth0"


# disks-configure
# ---
# Simple disk configuration, currently supports only msdos partitions (no gpt) and doesn't support raid or lvm.
# If a partition table is present on the disk, the configuration will be ALWAYS skipped, we don't want to lose data.
#
DISKS_0_DEV="/dev/sda"
DISKS_0_PARTITION_0_FS="swap"
DISKS_0_PARTITION_0_SIZE="4G"
DISKS_0_PARTITION_0_MOUNT_POINT="swap"
DISKS_0_PARTITION_0_MKFS_EXTRA_PARAM="-L NVME_SWAP"
DISKS_0_PARTITION_1_FS="ext4"
DISKS_0_PARTITION_1_SIZE="all"
DISKS_0_PARTITION_1_MOUNT_POINT="/mnt/data"
DISKS_0_PARTITION_1_MKFS_EXTRA_PARAM="-L NVME_DATA"


# apt-update-system
# ---
# APT_SHARED_PKGS_REPOSITORY_NFS
# APT_UPDATE_PKGCACHE_BIN_LAST_REFRESH_DIFF_IN_S
#
APT_SHARED_PKGS_REPOSITORY_NFS="gateway.home:/mnt/data_pxe/os/linux/rpi4/ubuntu-20.10-server-arm64-shared-pkgs-repository"
APT_UPDATE_PKGCACHE_BIN_LAST_REFRESH_DIFF_IN_S=86400


# apt-install-packages
# ---
# APT_INSTALL_PACKAGES
#
APT_INSTALL_PACKAGES=""
APT_INSTALL_PACKAGES="${APT_INSTALL_PACKAGES} mc nano redis-tools iperf3 iftop htop rng-tools python3-pip python3-pil"
APT_INSTALL_PACKAGES="${APT_INSTALL_PACKAGES} python3-smbus python3-rpi.gpio python3-psutil i2c-tools fonts-freefont-ttf"
APT_INSTALL_PACKAGES="${APT_INSTALL_PACKAGES} ifenslave build-essential cmake flex bison gdb autoconf automake gcc-9"
APT_INSTALL_PACKAGES="${APT_INSTALL_PACKAGES} g++-9 gdb gdbserver lcov ca-certificates libraspberrypi-bin"


# apparmor-disable
# ---
# APPARMOR_DISABLE                  Set to 1 to disable apparmor
#
APPARMOR_DISABLE=1


# sshd-configure
# ---
# NO CONFIG PARAMETER SUPPORTED
#


# users-configure
# ---
# Supported params ({X} and {Y} are indexes from 0 onwards, must be sequential)
# USER_{X}_NAME                     User name of the user to create
# USER_{X}_CREATE_HOME              If set to 1, creates the home directory
# USER_{X}_SUDO_NOPASSWD            If set to 1, set the NOPASSWD flag in sudo for the user
# USER_{X}_GROUP                    If not specified the default will be used
# USER_{X}_GROUPS                   Additional user groups (comma separated, no whitespaces!)
# USER_{X}_ADD_CREATE_OPTS_OVERRIDE Override ALL the create options (to specificy different home, comments, etc.)
# USER_{X}_SSH_AUTH_KEYS_{Y}        Pre-authorised ssh keys
#
USER_0_NAME="ubuntu"
USER_0_CREATE_HOME=1
USER_0_SUDO_NOPASSWD=1
USER_0_SHELL="/bin/bash"
USER_0_GROUP=""
USER_0_GROUPS="adm,audio,cdrom,dialout,dip,floppy,lxd,netdev,plugdev,sudo,video"
USER_0_ADD_CREATE_OPTS_OVERRIDE=""
USER_0_SSH_AUTH_KEYS_0="__YOUR_SSH_PUB_KEY__"
